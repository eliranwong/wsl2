#!/bin/bash

# This script helps running gui applications under WSL2 (Windows Subsystem for Linux Version 2)
# Fixes on various issues of running gui apps under WSL2 are integrated in this script.


# Connect external x-display server
# Adapted from https://github.com/WhitewaterFoundry/pengwin-base/pull/61/commits/bbc85e3eb085400ac0fe21a20237041a2b0d7e42
# check whether it is WSL1 for WSL2
if [[ -n ${WSL_INTEROP} ]]; then
# The following line is an old approach for checking WSL version, keep for reference only.
#if ( which wsl.exe >/dev/null ) && ( $(which wsl.exe) -l -v >/dev/null ) && [ $(wsl.exe -l -v 2>&1 | iconv -f Unicode -t $(locale charmap) | sed -e "s|\r||g" -e "s|\x00||g" | grep ${WSL_DISTRO_NAME} | awk '{print $NF}') -eq 2 ]; then

    #Export an enviroment variable for helping other processes
    export WSL2=1
    # enable external x display for WSL 2

    ipconfig_exec=$(wslpath "C:\\Windows\\System32\\ipconfig.exe")
    if ( which ipconfig.exe >/dev/null ); then
        ipconfig_exec=$(which ipconfig.exe)
    fi

    wsl2_d_tmp="$(eval "$ipconfig_exec" | grep -n -m 1 "Default Gateway.*: [0-9a-z]" | cut -d : -f 1)"
    wsl2_d_tmp="$(eval "$ipconfig_exec" | sed ''"$(expr $wsl2_d_tmp - 4)"','"$(expr $wsl2_d_tmp + 0)"'!d' | grep IPv4 | cut -d : -f 2 | sed -e "s|\s||g" -e "s|\r||g")"
    export DISPLAY=$wsl2_d_tmp:0.0

    unset wsl2_d_tmp
    unset ipconfig_exec
else
    # enable external x display for WSL 1
    export DISPLAY=:0
fi

# An alternate approach, but it may not work in complex network setup
#export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0.0

# Show DISPLAY variable
echo DISPLAY=$DISPLAY

# To work with Xresources
#xrdb -merge ~/.Xresources

# To work better with mesa-utils
export -n LIBGL_ALWAYS_INDIRECT

# To correct DBUS_SESSION
export $(dbus-launch --exit-with-x11)

# Set QStandardPaths
mkdir -p /tmp/runtime-$USER
export XDG_RUNTIME_DIR=/tmp/runtime-$USER

# Input method [Optional]
# We recommend using ibus as input method for non-Latin languages in version 2 of WSL.
# You may consider to use fcitx instead of ibus, but fcitx does not work in many applications.
# To use ibus, you have to install it first.
# You may find instructions on installing ibus with the following link:
# https://github.com/eliranwong/wsl2/blob/master/input_method/ibus.md
# Uncomment the following 8 lines to launch ibus service & set variables:
#export LC_CTYPE=zh_CN.UTF-8
#export XIM=ibus
#export XIM_PROGRAM=/usr/bin/ibus
#export QT_IM_MODULE=ibus
#export GTK_IM_MODULE=ibus
#export XMODIFIERS=@im=ibus
#export DefaultIMModule=ibus
#ibus-daemon -drx

echo GUI environment is now ready.
